server {
  server_name bastion-control;
  
  listen 443 http2 ssl;
  listen [::]:443 http2 ssl;
  
  ssl_certificate /etc/nginx/certs/servercert.pem;
  ssl_certificate_key /etc/nginx/certs/serverkey.pem;
  
  resolver 8.8.8.8 8.8.4.4 valid=300s;
  resolver_timeout 5s;
  
  # Disable preloading HSTS for now.  You can use the commented out header line that includes
  # the "preload" directive if you understand the implications.
  # add_header Strict-Transport-Security "max-age=63072000; includeSubdomains; preload";
  add_header Strict-Transport-Security "max-age=63072000; includeSubdomains";
  add_header X-Frame-Options DENY;
  add_header X-Content-Type-Options nosniff;
  root /usr/share/nginx/html;
  
  # Disable buffering (we serve very large files through the PRIP)
  proxy_buffering off;
  
  # Browser requests must be authenticated by username/password (HTTP Basic Auth)
  location = / {
    auth_basic             'prosEO protected area';
    auth_basic_user_file   /etc/nginx/htpasswd;
  }
  location / {
    auth_basic             'prosEO protected area';
    auth_basic_user_file   /etc/nginx/htpasswd;
  }
  
  # Requests to prosEO API will be authenticated by prosEO itself
  location /proseo/prip/ {
    proxy_pass             http://{{ groups['brain_prip'][0] }}:8089/proseo/prip/;
  }

  # Storage Manager download requests must be authenticated by a token in the download URI (checked by Storage Manager)
  location ~* .*/products/download {
    proxy_pass http://{{ groups['nfsserver_prip'][0] }}:8080;
    # Long timeout to allow for download of very large files
    proxy_read_timeout     1800s;
  }
  
  # Error pages
  error_page 404 /404.html;
    location = /404.html {
  }
  error_page 500 502 503 504 /50x.html;
    location = /50x.html {
  }
}
