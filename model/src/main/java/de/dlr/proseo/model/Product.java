/**
 * Product.java
 * 
 * (C) 2019 Dr. Bassler & Co. Managementberatung GmbH
 */
package de.dlr.proseo.model;

import java.time.Instant;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.ElementCollection;
import javax.persistence.Entity;
import javax.persistence.Index;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.Table;

/**
 * Representation of a data product
 * 
 * @author Dr. Thomas Bassler
 *
 */
@Entity
@Table(indexes = { 
		@Index(unique = false, columnList = "product_class_id, sensing_start_time"), 
		@Index(unique = false, columnList = "product_class_id, sensing_stop_time"), 
		@Index(unique = false, columnList = "product_class_id, generation_time") })
public class Product extends PersistentObject {
	
	/** Product class this products instantiates */
	@ManyToOne
	private ProductClass productClass;
	
	/** Processing modes as defined for the enclosing mission (only if generated by this mission) */
	private String mode;
	
	/** Sensing start time */
	@Column(name = "sensing_start_time", columnDefinition = "TIMESTAMP(6)")
	private Instant sensingStartTime;
	
	/** Sensing stop time */
	@Column(name = "sensing_stop_time", columnDefinition = "TIMESTAMP(6)")
	private Instant sensingStopTime;
	
	/** Product generation time */
	@Column(name = "generation_time", columnDefinition = "TIMESTAMP(6)")
	private Instant generationTime;
	
	/** Set of component products */
	@OneToMany(mappedBy = "enclosingProduct")
	private Set<Product> componentProducts = new HashSet<>();
	
	/** Product for which this product is a component */
	@ManyToOne
	private Product enclosingProduct;
	
	/** Orbit relationship of this product, if any */
	@ManyToOne
	private Orbit orbit;
	
	/** Product files for this product */
	@OneToMany(cascade = CascadeType.ALL, orphanRemoval = true, mappedBy = "product")
	private Set<ProductFile> productFile = new HashSet<>();
	
	/** Product queries satisfied by this product */
	@ManyToMany
	private Set<ProductQuery> satisfiedProductQueries = new HashSet<>();
	
	/** Job step that produced this product (if any) */
	@OneToOne
	private JobStep jobStep;
	
	/** Processor configuration used for processing this product */
	@ManyToOne
	private ConfiguredProcessor configuredProcessor;
	
	/**
	 * A collection of mission-specific parameters for this object
	 */
	@ElementCollection
	private Map<String, Parameter> parameters = new HashMap<>();
	
	/**
	 * Gets the product class
	 * 
	 * @return the productClass
	 */
	public ProductClass getProductClass() {
		return productClass;
	}
	/**
	 * Sets the product class
	 * 
	 * @param productClass the productClass to set
	 */
	public void setProductClass(ProductClass productClass) {
		this.productClass = productClass;
	}
	/**
	 * Gets the processing mode
	 * 
	 * @return the mode
	 */
	public String getMode() {
		return mode;
	}
	/**
	 * Sets the processing mode
	 * 
	 * @param mode the mode to set
	 */
	public void setMode(String mode) {
		this.mode = mode;
	}
	/**
	 * Gets the sensing start time
	 * 
	 * @return the sensingStartTime
	 */
	public Instant getSensingStartTime() {
		return sensingStartTime;
	}
	/**
	 * Sets the sensing start time
	 * 
	 * @param sensingStartTime the sensingStartTime to set
	 */
	public void setSensingStartTime(Instant sensingStartTime) {
		this.sensingStartTime = sensingStartTime;
	}
	
	/**
	 * Gets the sensing stop time
	 * 
	 * @return the sensingStopTime
	 */
	public Instant getSensingStopTime() {
		return sensingStopTime;
	}
	
	/**
	 * Sets the sensing stop time
	 * 
	 * @param sensingStopTime the sensingStopTime to set
	 */
	public void setSensingStopTime(Instant sensingStopTime) {
		this.sensingStopTime = sensingStopTime;
	}

	/**
	 * Gets the product generation time
	 * 
	 * @return the generationTime
	 */
	public Instant getGenerationTime() {
		return generationTime;
	}
	
	/**
	 * Sets the product generation time
	 * 
	 * @param generationTime the generationTime to set
	 */
	public void setGenerationTime(Instant generationTime) {
		this.generationTime = generationTime;
	}
	
	/**
	 * Gets the sub-products of this product
	 * 
	 * @return the componentProducts
	 */
	public Set<Product> getComponentProducts() {
		return componentProducts;
	}
	
	/**
	 * Sets the sub-products of this product
	 * 
	 * @param componentProducts the componentProducts to set
	 */
	public void setComponentProducts(Set<Product> componentProducts) {
		this.componentProducts = componentProducts;
	}
	
	/**
	 * Gets the enclosing product of this product
	 * 
	 * @return the enclosingProduct
	 */
	public Product getEnclosingProduct() {
		return enclosingProduct;
	}
	
	/**
	 * Sets the enclosing product of this product
	 * 
	 * @param enclosingProduct the enclosingProduct to set
	 */
	public void setEnclosingProduct(Product enclosingProduct) {
		this.enclosingProduct = enclosingProduct;
	}
	
	/**
	 * Gets the orbit for this product
	 * 
	 * @return the orbit (or null, if this product is not associated to an orbit)
	 */
	public Orbit getOrbit() {
		return orbit;
	}
	
	/**
	 * Sets the orbit for this product
	 * 
	 * @param orbit the orbit to set (may be null)
	 */
	public void setOrbit(Orbit orbit) {
		this.orbit = orbit;
	}
	
	/**
	 * Gets the set of product files (at most one per existing processing facility)
	 * 
	 * @return the productFile
	 */
	public Set<ProductFile> getProductFile() {
		return productFile;
	}
	/**
	 * Sets the set of product files (at most one per existing processing facility)
	 * 
	 * @param productFile the productFile to set
	 */
	public void setProductFile(Set<ProductFile> productFile) {
		this.productFile = productFile;
	}
	/**
	 * Gets the set of satisfied product queries
	 * 
	 * @return the satisfiedProductQueries
	 */
	public Set<ProductQuery> getSatisfiedProductQueries() {
		return satisfiedProductQueries;
	}
	/**
	 * Sets the set of satisfied product queries
	 * 
	 * @param satisfiedProductQueries the satisfiedProductQueries to set
	 */
	public void setSatisfiedProductQueries(Set<ProductQuery> satisfiedProductQueries) {
		this.satisfiedProductQueries = satisfiedProductQueries;
	}
	/**
	 * Gets the job step that created this product
	 * 
	 * @return the jobStep
	 */
	public JobStep getJobStep() {
		return jobStep;
	}
	/**
	 * Sets the job step that created this product
	 * 
	 * @param jobStep the jobStep to set
	 */
	public void setJobStep(JobStep jobStep) {
		this.jobStep = jobStep;
	}
	/**
	 * Gets the configured processor that generated this product
	 * 
	 * @return the configuredProcessor
	 */
	public ConfiguredProcessor getConfiguredProcessor() {
		return configuredProcessor;
	}
	/**
	 * Sets the configured processor that generated this product
	 * 
	 * @param configuredProcessor the configuredProcessor to set
	 */
	public void setConfiguredProcessor(ConfiguredProcessor configuredProcessor) {
		this.configuredProcessor = configuredProcessor;
	}
	/**
	 * Gets the product parameters
	 * 
	 * @return the parameters
	 */
	public Map<String, Parameter> getParameters() {
		return parameters;
	}
	
	/**
	 * Sets the product parameters
	 * 
	 * @param parameters the parameters to set
	 */
	public void setParameters(Map<String, Parameter> parameters) {
		this.parameters = parameters;
	}
	
	/**
	 * Get a named String parameter
	 * @return the parameter value casted to String
	 * @throws ClassCastException if the named parameter is not of an appropriate type
	 */
	public String getStringParameter(String key) throws ClassCastException {
		return parameters.get(key).getStringValue();
	}

	/**
	 * Set the named String parameter to the given value
	 * @param parameters the parameters to set
	 */
	public void setStringParameter(String key, String value) {
		Parameter param = parameters.get(key);
		if (null == param) {
			param = new Parameter();
		}
		param.setStringValue(value);
		this.parameters.put(key, param);
	}

	/**
	 * Get a named Integer parameter
	 * @return the parameter value casted to Integer
	 * @throws ClassCastException if the named parameter is not of an appropriate type
	 */
	public Integer getIntegerParameter(String key) throws ClassCastException {
		return parameters.get(key).getIntegerValue();
	}

	/**
	 * Set the named Integer parameter to the given value
	 * @param parameters the parameters to set
	 */
	public void setIntegerParameter(String key, Integer value) {
		Parameter param = parameters.get(key);
		if (null == param) {
			param = new Parameter();
		}
		param.setIntegerValue(value);
		this.parameters.put(key, param);
	}

	/**
	 * Get a named Boolean parameter
	 * @return the parameter value casted to Boolean
	 * @throws ClassCastException if the named parameter is not of an appropriate type
	 */
	public Boolean getBooleanParameter(String key) throws ClassCastException {
		return parameters.get(key).getBooleanValue();
	}

	/**
	 * Set the named Boolean parameter to the given value
	 * @param parameters the parameters to set
	 */
	public void setBooleanParameter(String key, Boolean value) {
		Parameter param = parameters.get(key);
		if (null == param) {
			param = new Parameter();
		}
		param.setBooleanValue(value);
		this.parameters.put(key, param);
	}

	/**
	 * Get a named Double parameter
	 * @return the parameter value casted to Double
	 * @throws ClassCastException if the named parameter is not of an appropriate type
	 */
	public Double getDoubleParameter(String key) throws ClassCastException {
		return parameters.get(key).getDoubleValue();
	}

	/**
	 * Set the named Double parameter to the given value
	 * @param parameters the parameters to set
	 */
	public void setDoubleParameter(String key, Double value) {
		Parameter param = parameters.get(key);
		if (null == param) {
			param = new Parameter();
		}
		param.setDoubleValue(value);
		this.parameters.put(key, param);
	}
	@Override
	public String toString() {
		return "Product [productClass=" + (null == productClass ? "null" : productClass.getProductType()) 
				+ ", mode=" + mode + ", sensingStartTime=" + sensingStartTime
				+ ", sensingStopTime=" + sensingStopTime + ", generationTime=" + generationTime + ", productFile=" + productFile
				+ ", parameters=" + parameters + "]";
	}

}
