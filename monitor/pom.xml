<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>de.dlr.proseo</groupId>
		<artifactId>proseo</artifactId>
		<version>0.9.4</version>
	</parent>

	<artifactId>proseo-monitor</artifactId>
	<name>prosEO Monitor</name>
	<description>prosEO Monitor: The component to retrieve log data  of services</description>

	<url>https://github.com/dlr-eoc/prosEO/monitor/</url>
	<organization>
		<name>DLR - Deutsches Zentrum f√ºr Luft- und Raumfahrt e. V.</name>
		<url>http://www.dlr.de</url>
	</organization>

	<properties>
		<module.version>0.9.4</module.version>
		<kubernetes.client.version>12.0.1</kubernetes.client.version>
		<main.basedir>${basedir}/../..</main.basedir>
		<raml-path>src/main/resources/raml/monitor-api.raml</raml-path>
		<raml-base-package>de.dlr.proseo.monitor.rest</raml-base-package>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-test</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
		</dependency>
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
		</dependency>
		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
		</dependency>
		<dependency>
			<groupId>javax.xml.bind</groupId>
			<artifactId>jaxb-api</artifactId>
		</dependency>
		<dependency>
			<groupId>de.dlr.proseo</groupId>
			<artifactId>proseo-model</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>de.dlr.proseo</groupId>
			<artifactId>proseo-interfaces</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>de.dlr.proseo</groupId>
			<artifactId>proseo-logging</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>io.kubernetes</groupId>
			<artifactId>client-java</artifactId>
			<version>${kubernetes.client.version}</version>
		</dependency>
		<dependency>
			<groupId>io.kubernetes</groupId>
			<artifactId>client-java-proto</artifactId>
			<version>${kubernetes.client.version}</version>
		</dependency>
		<dependency>
			<groupId>io.kubernetes</groupId>
			<artifactId>client-java-api</artifactId>
			<version>${kubernetes.client.version}</version>
		</dependency>
		<dependency>
			<groupId>com.github.docker-java</groupId>
			<artifactId>docker-java</artifactId>
			<version>3.2.12</version>
		</dependency>
		<dependency>
			<groupId>com.github.docker-java</groupId>
			<artifactId>docker-java-transport-okhttp</artifactId>
			<version>3.2.12</version>
		</dependency>

		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
		</dependency>
		<dependency>
			<groupId>com.phoenixnap.oss</groupId>
			<artifactId>springmvc-raml-plugin</artifactId>
			<type>maven-plugin</type>
		</dependency>
	</dependencies>

	<build>
		<finalName>proseo-monitor</finalName>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>

			<!-- required for adding generated sources -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<executions>
					<execution>
						<phase>generate-sources</phase>
						<goals>
							<goal>add-source</goal>
						</goals>
						<configuration>
							<sources>
								<!-- where to find the generated sources -->
								<source>${raml-output-path}</source>
							</sources>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- Generate Spring MVC from RAML files -->
			<plugin>
				<groupId>com.phoenixnap.oss</groupId>
				<artifactId>springmvc-raml-plugin</artifactId>
				<configuration>
					<basePackage>${raml-base-package}</basePackage>
					<rule>com.phoenixnap.oss.ramlplugin.raml2code.rules.Spring4ControllerDecoratorRule</rule>
				</configuration>
				<executions>
					<execution>
						<id>generate-springmvc-endpoints</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>generate-springmvc-endpoints</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!-- Create HTML documentation from RAML files -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>exec-maven-plugin</artifactId>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>exec</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<executable>raml2html</executable>
					<commandlineArgs>-i ${raml-path} -o src/site/resources/${project.artifactId}.html</commandlineArgs>
				</configuration>
			</plugin>

            <!-- Create JAR file to extend specific monitors from -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <executions>
                    <execution>
                        <id>extendable-jar</id>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                        <configuration>
                            <classifier>extendable</classifier>
                            <includes>
                                <include>de/dlr/proseo/monitor/MonitorConfiguration*</include>
                                <include>de/dlr/proseo/monitor/microservice/**</include>
                                <include>de/dlr/proseo/monitor/order/**</include>
                                <include>de/dlr/proseo/monitor/product/**</include>
                                <include>de/dlr/proseo/monitor/rawdata/**</include>
                                <include>de/dlr/proseo/monitor/rest/**</include>
                            </includes>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

			<!-- Build Docker image -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <executions>
                    <execution>
                        <phase>install</phase>
                        <configuration>
                            <target>
                            	<exec executable="docker" failonerror="true">
                                    <arg value="build" />
                                    <arg value="-t" />
                                    <arg value="${docker.registry}/${project.build.finalName}:${module.version}" />
                                    <arg value="--platform" />
                                    <arg value="${project.build.platform}" />
                                    <arg value="." />
                                </exec>
                            	<exec executable="docker" failonerror="true">
                                    <arg value="push" />
                                    <arg value="${docker.registry}/${project.build.finalName}:${module.version}" />
                                </exec>
                            </target>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
		</plugins>
	</build>
</project>