---
- name: Install nginx packages
  # XXX Note: this should be platform independent, but the package names may
  # differ from one place to another.
  package:
    name:
    - httpd-tools
    - nginx
    state: latest

- name: Create key directory
  file:
    dest: /etc/nginx/certs
    owner: root
    group: root
    mode: 0700
    state: directory

- name: Copy server cert and key
  copy:
    src: "{{ inventory_dir }}/certs/{{ item }}"
    dest: "/etc/nginx/certs/{{ item }}"
    owner: root
    group: root
    mode: 0600
  loop:
  - servercert.pem
  - serverkey.pem

- name: Configure nginx HTTP->HTTPS redirection
  blockinfile:
    dest: /etc/nginx/default.d/redirect.conf
    create: yes
    block: |
      return 301 https://$host$request_uri;

- name: Configure HTTPS proxy
  blockinfile:
    dest: /etc/nginx/conf.d/ssl.conf
    create: yes
    block: |
      server {
        listen 443 http2 ssl;
        listen [::]:443 http2 ssl;
        ssl on;
        server_name proseo-k8s-gate.de;
        ssl_certificate /etc/nginx/certs/servercert.pem;
        ssl_certificate_key /etc/nginx/certs/serverkey.pem;
        resolver 8.8.8.8 8.8.4.4 valid=300s;
        resolver_timeout 5s;
        # Disable preloading HSTS for now.  You can use the commented out header line that includes
        # the "preload" directive if you understand the implications.
        # add_header Strict-Transport-Security "max-age=63072000; includeSubdomains; preload";
        add_header Strict-Transport-Security "max-age=63072000; includeSubdomains";
        add_header X-Frame-Options DENY;
        add_header X-Content-Type-Options nosniff;
        root /usr/share/nginx/html;
        location / {
          proxy_pass http://127.0.0.1:{{ kubectl_proxy_port }}/;
          auth_basic             'prosEO dev area';
          auth_basic_user_file   /etc/nginx/htpasswd;
        }
        error_page 404 /404.html;
          location = /404.html {
        }
        error_page 403 /403.html;
          location = /403.html {
        }
        error_page 500 502 503 504 /50x.html;
          location = /50x.html {
        }
      }

- name: Configure proxy users
  command: "htpasswd -cb /etc/nginx/htpasswd '{{ item.key }}' '{{ item.value }}'"
  with_dict: "{{ nginx_users|default([]) }}"

- name: (Re-)start nginx
  service:
    name: nginx
    state: restarted
    enabled: yes
