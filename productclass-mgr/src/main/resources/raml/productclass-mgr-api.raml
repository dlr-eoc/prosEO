#%RAML 1.0
title: prosEO Product Class Manager REST Services API
version: v0.1
protocols: [ HTTPS ] 
baseUri: /proseo/productclass-mgr/{version}
mediaType: application/json

securitySchemes:
  basicAuth:
    description: Each request must contain the headers necessary for basic authentication
    type: Basic Authentication
    describedBy:
      headers:
        Authorization:
          description: Used to send the Base64-encoded "username:password" credentials
          type: string
      responses:
        401:
          description: |
            Unauthorized. Either the provided username and password 
            combination is invalid, or the user is not allowed to access
            the content provided by the requested URL.

types:
  RestProductClass: !include ../../../../../model/src/main/resources/raml/types/productclass.raml
  RestSimplePolicy: !include ../../../../../model/src/main/resources/raml/types/simplepolicy.raml
  RestSimpleSelectionRule: !include ../../../../../model/src/main/resources/raml/types/simpleselectionrule.raml
  RestSelectionRule: RestSimpleSelectionRule[]
  RestParameter: !include ../../../../../model/src/main/resources/raml/types/parameter.raml
  SelectionRuleString: !include ../../../../../interfaces/src/main/resources/raml/types/selectionrulestring.raml

resourceTypes:
  standard:
    get?:
      responses:
        403:
          description: A cross-mission data access was attempted.
          headers:
            Warning: !include types/error.raml
        404:
          description: The requested resource was not found.
          headers:
            Warning: !include types/error.raml
    put?:
      responses:  
        400:
          description: The request sent to the server contains data which is not as expected e.g. invalid location URI
          headers:
            Warning: !include types/error.raml
        403:
          description: A cross-mission data access was attempted.          
          headers:
            Warning: !include types/error.raml
        404:
          description: The requested resource was not found.
          headers:
            Warning: !include types/error.raml
    post?:
      responses:
        400:
          description: The request sent to the server contains data which is not as expected e.g. invalid location URI
          headers:
            Warning: !include types/error.raml
        403:
          description: A cross-mission data access was attempted.          
          headers:
            Warning: !include types/error.raml  
    patch?:
      responses:
        304:
          body:
            application/json:
              type: RestProductClass
              example: !include ../../../../../model/src/main/resources/raml/examples/productclass.json
        400:
          description: The request sent to the server contains data which is not as expected e.g. invalid location URI
          headers:
            Warning: !include types/error.raml
        403:
          description: A cross-mission data access was attempted.
          headers:
            Warning: !include types/error.raml
        404:
          description: The requested resource was not found                     
          headers:
            Warning: !include types/error.raml
        409:
          description: A concurrent modification was attempted.
          headers:
            Warning: !include types/error.raml
    delete?:
      responses:      
        400:
          description: The request sent to the server contains data which is not as expected e.g. invalid location URI
          headers:
            Warning: !include types/error.raml
        403:
          description: A cross-mission data access was attempted.          
          headers:
            Warning: !include types/error.raml
        404:
          description: The requested resource to delete was not found.
          headers:
            Warning: !include types/error.raml
              
/productclasses:
  type: standard
  get:
    description: |
      Get product classes, optionally filtered by mission, product type, processor
      class, processing level or visibility
    displayName: getRestProductClass
    queryParameters:
      mission?: 
        type: string
        description: the mission code
      productType?: 
        type: string[]
        description: a list of product types as agreed in the mission specification documents (e. g. L2_CLOUD___)
      processorClass?: 
        type: string[]
        description: a list of processor types capable of producing products from the retrieved product classes
      level?: 
        type: string
        description: the required level of processing for the retrieved product classes
      visibility?: 
        type: string
        description: the visibility of products from the retrieved product classes to external users
      recordFrom?:
        type: integer
        format: int32
        description: the first result to return
      recordTo?:
        type: integer
        format: int32
        description: the last result to return
      orderBy?:
        type: string[]
        description: an array of strings containing a column name and an optional sort direction (ASC/DESC), separated by white space
    responses:
      200:
        body:
          application/json:
            type: RestProductClass[]
            example: !include ../../../../../model/src/main/resources/raml/examples/productclass-list.json
      429:
        description: The length of the result exceeds a configured maximum
        headers:
          Warning: !include types/error.raml    
  post:
    description: |
      Create a new product class
    displayName: createRestProductClass
    body:
      application/json:
        type: RestProductClass
        example: !include ../../../../../model/src/main/resources/raml/examples/productclass.json
    responses:
      201:
        body:
          application/json:
            type: RestProductClass
            example: !include ../../../../../model/src/main/resources/raml/examples/productclass.json                  

  /count:
    get:
      description: |
        Get product classes, optionally filtered by mission, product type, processor
        class, processing level or visibility
      displayName: countProductClasses
      queryParameters:
        mission?: 
          type: string
          description: the mission code
        productType?: 
          type: string[]
          description: a list of product types as agreed in the mission specification documents (e. g. L2_CLOUD___)
        processorClass?: 
          type: string[]
          description: a list of processor types capable of producing products from the retrieved product classes
        level?: 
          type: string
          description: the required level of processing for the retrieved product classes
        visibility?: 
          type: string
          description: the visibility of products from the retrieved product classes to external users
      responses:
        200:
          body:
            text/plain:

  /names:
    get:
      description: |
        Get product classes, optionally filtered by mission and/or product type
      displayName: getProductClassNames
      queryParameters:
        mission?: 
          type: string
          description: the mission code
        productType?: 
          type: string
          description : a product type as agreed in the mission specification documents (e. g. L2_CLOUD___)
      responses:
        200:
          body:
            application/json:
              type: string[]

  /{id}:
    uriParameters:
      id:
        type: integer
        format: long
    get:
      description: |
        Get a product class by ID
      displayName: getRestProductClassById
      responses:
        200:
          body:
            application/json:
              type: RestProductClass
              example: !include ../../../../../model/src/main/resources/raml/examples/productclass.json
        400:
          description: The request sent to the server contains data which is not as expected e.g. invalid location URI
          headers:
            Warning: !include types/error.raml
    patch:
      description: |
        Update a product class by ID (does not update its selection rules)
      displayName: modifyRestProductClass
      body:
        application/json:
          type: RestProductClass
          example: !include ../../../../../model/src/main/resources/raml/examples/productclass.json
      responses:
        200:
          body:
            application/json:
              type: RestProductClass
              example: !include ../../../../../model/src/main/resources/raml/examples/productclass.json
    delete:
      description: |
        Delete a product class by ID (with all its selection rules)
      displayName: deleteProductclassById
      responses:
        204:
        304:
          body:
            application/json:
              type: RestProductClass
              example: !include ../../../../../model/src/main/resources/raml/examples/productclass.json

    /selectionrules:
      get:
        description: |
          Get the simple selection rules as formatted string, optionally selected by source class
        displayName: getSelectionRuleStrings
        queryParameters:
          sourceClass?:
            type: string
            description: the prosEO product type of the source class, from which the product class can be generated (may be null)
        responses:
          200:
            body:
              application/json:
                type: SelectionRuleString[]
                example: !include examples/selectionrule.json
      post:
        description: |
          Create a selection rule using Rule Language
        body:
          application/json:
            type: SelectionRuleString[]
            example: !include examples/selectionrule.json
        responses:
          201:
            body:
              application/json:
                type: RestProductClass
                description: The product class with the added, converted selection rules

      /{ruleid}:
        uriParameters:
          ruleid:
            type: integer
            format: long
            description: Database id of the selection rule
        get:
          description: |
            Get a selection rule by ID
          displayName: getSelectionRuleString
          responses:
            200:
              body:
                 application/json:
                   type: SelectionRuleString
            404:
              description: The requested resource was not found.                
              headers:
                Warning: !include types/error.raml
        patch:
          description:
            Update a selection rule using Rule Language
          displayName: modifySelectionRuleString
          body:
            application/json:
              type: SelectionRuleString
          responses:
            200:
              body:
                application/json:
                  type: SelectionRuleString
        delete:
          description: |
            Delete a selection rule
          displayName: deleteSelectionrule
          responses:
            204:

        /{configuredProcessor}:
          uriParameters:
            configuredProcessor:
              type: string
              description: The configured processor, for which the selection rule is valid
          put:
            description: |
              Add the configured processor to the selection rule (if it is not already part of the selection rule)
            displayName: addProcessorToRule
            responses:
              200:
                body:
                  application/json:
                    type: SelectionRuleString
                    description: The modified selection rule
          delete:
            description: 
              Remove the configured processor from the selection rule (the selection rule will be disconnected from the configured
              processor)
            displayName: removeProcessorFromRule
            responses:
              200:
                body:
                  application/json:
                    type: SelectionRuleString
                    description: The modified selection rule