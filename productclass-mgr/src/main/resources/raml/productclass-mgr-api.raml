#%RAML 1.0
title: prosEO Product Class Manager REST Services API
version: v0.1
protocols: [ HTTPS ] 
baseUri: /proseo/productclass-mgr/{version}
mediaType: application/json

securitySchemes:
  basicAuth:
    description: Each request must contain the headers necessary for
                 basic authentication
    type: Basic Authentication
    describedBy:
      headers:
        Authorization:
          description: Used to send the Base64-encoded "username:password"
                       credentials
          type: string
      responses:
        401:
          description: |
            Unauthorized. Either the provided username and password
            combination is invalid, or the user is not allowed to access
            the content provided by the requested URL.

types:
  ProductClass: !include model/types/productclass.raml
  SimplePolicy: !include model/types/simplepolicy.raml
  SimpleSelectionRule: !include model/types/simpleselectionrule.raml
  SelectionRule: SimpleSelectionRule[]
  Parameter: !include model/types/parameter.raml

resourceTypes:
  standard:
    get?:
      responses:          
        400:
          description: |
            The request sent to the server contains data which is not as expected e.g. invalid location URI
          headers:
            Warning: !include types/error.raml
        404:
          description: |
            The requested resource was not found                     
          headers:
            Warning: !include types/error.raml
    put?:
      responses:          
        404:
          description: |
            The requested resource on which the modification is being attempted was not found              
          headers:
            Warning: !include types/error.raml
    delete?:
      responses:          
        404:
          description: | 
            The requested resource to delete was not found 
          headers:
            Warning: !include types/error.raml
              
/productclasses:
  type: standard
  get:
    description: Get product classes by mission, product type or mission type
    queryParameters:
      mission?: string
      productType?: string
      missionType?: string
    responses:
      200:
        body:
          application/json:
            type: ProductClass[]
            example: !include model/examples/productclass-list.json
  post:
    description: Create a new product class
    body:
      application/json:
        type: ProductClass
        example: !include model/examples/productclass.json
    responses:
      201:
        body:
          application/json:
            type: ProductClass
            example: !include model/examples/productclass.json
  /{id}:
    uriParameters:
      id:
        type: integer
        format: long
    get:
      description: Get a product class by ID
      responses:
        200:
          body:
            application/json:
              type: ProductClass
              example: !include model/examples/productclass.json
    put:
      description: Update a product class by ID
      body:
        application/json:
          type: ProductClass
          example: !include model/examples/productclass.json
      responses:
        200:
          body:
            application/json:
              type: ProductClass
              example: !include model/examples/productclass.json
    delete:
      description: Delete a product class by ID
      responses:
        204:
    /selectionrules/{targetclass}:
      uriParameters:
        targetclass:
          type: string
          description: Internal target class name (product type)
      get:
        description: Get the simple selection rule for the target class as formatted string
        responses:
          200:
            body:
              application/json:
                type: array
                example: !include examples/selectionrule.json
                items: 
                  type: object
                  properties:
                    selectionRule: string
                    mode: string
                    configuredProcessors: string[]
      put:
        description: Update the selection rule for the given target class
        body:
          application/json:
            type: array
            example: !include examples/selectionrule.json
            items: 
              type: object
              properties:
                selectionRule: string
                mode: string
                configuredProcessors: string[]
      /{configuredProcessor}:
        delete:
          description: Delete the selection rule for the given target class and configured processor (the selection rule will
                       be disconnected from the configured processor and deleted, if it is not connected to any other
                       configured processor)
          responses:
            204:
            