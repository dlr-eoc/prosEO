<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>de.dlr.proseo</groupId>
		<artifactId>proseo</artifactId>
		<version>0.9.4</version>
	</parent>


	<artifactId>proseo-storage-mgr</artifactId>
	<name>prosEO Storage Manager</name>
	<description>prosEO Storage Manager – Abstraction layer for provider-specific object storage systems</description>
	<url>https://github.com/dlr-eoc/prosEO/order-mgr</url>
	<organization>
		<name>DLR - Deutsches Zentrum für Luft- und Raumfahrt e. V.</name>
		<url>http://www.dlr.de</url>
	</organization>

	<properties>
		<module.version>0.9.4</module.version>
		<main.basedir>${basedir}/../..</main.basedir>
		<raml-path>src/main/resources/raml/storage-mgr-api.raml</raml-path>
		<raml-base-package>de.dlr.proseo.storagemgr.rest</raml-base-package>

        <nimbus.jwt.version>9.10</nimbus.jwt.version>
        <!-- <awssdk1.version>1.11.799</awssdk1.version> -->
        <awssdk1.version>1.12.311</awssdk1.version>
        <!-- <awssdk2.version>2.13.30</awssdk2.version> -->
        <awssdk2.version>2.17.282</awssdk2.version>
        <!-- <alluxio.version>2.2.1</alluxio.version> -->
	</properties>


	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>software.amazon.awssdk</groupId>
				<artifactId>bom</artifactId>
				<version>2.17.123</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>


	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-configuration-processor</artifactId>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
		</dependency>

		<dependency>
			<groupId>com.nimbusds</groupId>
			<artifactId>nimbus-jose-jwt</artifactId>
			<version>${nimbus.jwt.version}</version>
		</dependency>


		<!-- AWS S3 SDK 2 -->
		<dependency>
			<groupId>software.amazon.awssdk</groupId>
			<artifactId>aws-sdk-java</artifactId>
			<version>${awssdk2.version}</version>
			<exclusions>
				<exclusion>
					<groupId>org.slf4j</groupId>
					<artifactId>slf4j-log4j12</artifactId>
				</exclusion>
				<exclusion>
					<groupId>log4j</groupId>
					<artifactId>log4j</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<!-- https://mvnrepository.com/artifact/software.amazon.awssdk.crt/aws-crt -->
		<dependency>
			<groupId>software.amazon.awssdk.crt</groupId>
			<artifactId>aws-crt</artifactId>
			<version>0.16.6</version>
		</dependency>

		<!-- AWS S3 SDK 1 -->
		<dependency>
			<groupId>com.amazonaws</groupId>
			<artifactId>aws-java-sdk-s3</artifactId>
			<version>${awssdk1.version}</version>
			<exclusions>
				<exclusion>
					<groupId>org.slf4j</groupId>
					<artifactId>slf4j-log4j12</artifactId>
				</exclusion>
				<exclusion>
					<groupId>log4j</groupId>
					<artifactId>log4j</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

        <dependency>
			<groupId>de.dlr.proseo</groupId>
			<artifactId>proseo-logging</artifactId>
			<version>${project.version}</version>
		</dependency>
		
		<dependency>
			<groupId>com.phoenixnap.oss</groupId>
			<artifactId>springmvc-raml-plugin</artifactId>
			<type>maven-plugin</type>
		</dependency>

	</dependencies>

	<build>
		<finalName>proseo-storage-mgr</finalName>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>

			<!-- required for adding generated sources -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<executions>
					<execution>
						<phase>generate-sources</phase>
						<goals>
							<goal>add-source</goal>
						</goals>
						<configuration>
							<sources>
								<!-- where to find the generated sources -->
								<source>${raml-output-path}</source>
							</sources>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- Generate Spring MVC from RAML files -->
			<plugin>
				<groupId>com.phoenixnap.oss</groupId>
				<artifactId>springmvc-raml-plugin</artifactId>
				<configuration>
					<basePackage>${raml-base-package}</basePackage>
					<rule>com.phoenixnap.oss.ramlplugin.raml2code.rules.Spring4ControllerDecoratorRule</rule>
				</configuration>
				<executions>
					<execution>
						<id>generate-springmvc-endpoints</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>generate-springmvc-endpoints</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!-- Create HTML documentation from RAML files -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>exec-maven-plugin</artifactId>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>exec</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<executable>raml2html</executable>
					<commandlineArgs>-i ${raml-path} -o src/site/resources/${project.artifactId}.html</commandlineArgs>
				</configuration>
			</plugin>

			<!-- Build Docker image -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <executions>
                    <execution>
                        <phase>install</phase>
                        <configuration>
                            <target>
                                <exec executable="docker" failonerror="true">
                                    <arg value="build" />
                                    <arg value="-t" />
                                    <arg value="${docker.registry}/${project.build.finalName}:${module.version}" />
                                    <arg value="--platform" />
                                    <arg value="${project.build.platform}" />
                                    <arg value="." />
                                </exec>
                                <exec executable="docker" failonerror="true">
                                    <arg value="push" />
                                    <arg value="${docker.registry}/${project.build.finalName}:${module.version}" />
                                </exec>
                            </target>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            
            <!-- TODO Clarify, whether this is needed -» Denys? -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>jar</goal>
						</goals>
						<configuration>
							<classifier>class</classifier>
							<includes>
							</includes>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
</project>